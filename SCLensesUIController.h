//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "LSAEffectsManagerListener.h"
#import "SCLensDataProviderDelegate.h"
#import "SCTimeProfilable.h"
#import "UICollectionViewDataSource.h"
#import "UICollectionViewDelegate.h"

@class NSArray, NSString, SCCameraOverlayView, SCCameraTimer, SCGrowingButton, SCLens, SCLensesPhotoPickerUIController, SCSponsoredSlugView, UICollectionView, UILabel, UITapGestureRecognizer, UIView;

@interface SCLensesUIController : NSObject <SCLensDataProviderDelegate, SCTimeProfilable, LSAEffectsManagerListener, UICollectionViewDelegate, UICollectionViewDataSource>
{
    id <SCLensDataProvider> _lensDataProvider;
    SCLensesPhotoPickerUIController *_lensesPhotoPickerController;
    UIView *_cameraTimerSuperview;
    struct CGRect _initialCameraTimerFrame;
    _Bool _lensesActive;
    NSString *_lensIdToRestore;
    NSString *_lensFaceIdToRestore;
    SCLens *_currentSelectedLens;
    SCCameraOverlayView *_cameraOverlay;
    SCCameraTimer *_cameraTimer;
    UIView *_hidableViewContainer;
    NSArray *_lenses;
    NSString *_activeLensId;
    SCGrowingButton *_lensesOpenCloseButton;
    UILabel *_lensHintLabel;
    UICollectionView *_lensesCollectionView;
    UIView *_lensDownloadOverlay;
    UILabel *_tapToDownloadLabel;
    SCSponsoredSlugView *_sponsoredSlugView;
    UITapGestureRecognizer *_cameraTimerTapGestureRecognizer;
}

+ (long long)context;
+ (id)profiledSelectorNames;
@property(retain, nonatomic) UITapGestureRecognizer *cameraTimerTapGestureRecognizer; // @synthesize cameraTimerTapGestureRecognizer=_cameraTimerTapGestureRecognizer;
@property(retain, nonatomic) SCSponsoredSlugView *sponsoredSlugView; // @synthesize sponsoredSlugView=_sponsoredSlugView;
@property(retain, nonatomic) UILabel *tapToDownloadLabel; // @synthesize tapToDownloadLabel=_tapToDownloadLabel;
@property(retain, nonatomic) UIView *lensDownloadOverlay; // @synthesize lensDownloadOverlay=_lensDownloadOverlay;
@property(retain, nonatomic) UICollectionView *lensesCollectionView; // @synthesize lensesCollectionView=_lensesCollectionView;
@property(retain, nonatomic) UILabel *lensHintLabel; // @synthesize lensHintLabel=_lensHintLabel;
@property(retain, nonatomic) SCGrowingButton *lensesOpenCloseButton; // @synthesize lensesOpenCloseButton=_lensesOpenCloseButton;
@property(copy, nonatomic) NSString *activeLensId; // @synthesize activeLensId=_activeLensId;
@property(retain, nonatomic) NSArray *lenses; // @synthesize lenses=_lenses;
@property(nonatomic, getter=areLensesActive) _Bool lensesActive; // @synthesize lensesActive=_lensesActive;
@property(nonatomic) __weak UIView *hidableViewContainer; // @synthesize hidableViewContainer=_hidableViewContainer;
@property(nonatomic) __weak SCCameraTimer *cameraTimer; // @synthesize cameraTimer=_cameraTimer;
@property(nonatomic) __weak SCCameraOverlayView *cameraOverlay; // @synthesize cameraOverlay=_cameraOverlay;
@property(retain, nonatomic) SCLens *currentSelectedLens; // @synthesize currentSelectedLens=_currentSelectedLens;
@property(retain, nonatomic) NSString *lensFaceIdToRestore; // @synthesize lensFaceIdToRestore=_lensFaceIdToRestore;
@property(retain, nonatomic) NSString *lensIdToRestore; // @synthesize lensIdToRestore=_lensIdToRestore;
- (void).cxx_destruct;
- (struct CGRect)lensesRect;
- (struct CGSize)itemSize;
- (void)showOrHideSponsoredSlugForLensIfNeeded:(id)arg1;
- (void)activateLens:(id)arg1;
- (void)clearLens;
- (void)applyLens:(id)arg1;
- (void)lensSelected:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)animateSponsoredSlug;
- (void)hideLensHintAnimated:(_Bool)arg1;
- (void)showHintWithId:(id)arg1 lens:(id)arg2 animated:(_Bool)arg3 autohide:(_Bool)arg4;
- (id)_localLocalizedHintForHintId:(id)arg1;
- (id)_localizedHintForHintId:(id)arg1 lens:(id)arg2;
- (void)showHintView:(_Bool)arg1 withHintView:(id)arg2 animated:(_Bool)arg3;
- (void)showTapToDownloadHint:(_Bool)arg1 downloadInProgress:(_Bool)arg2 animated:(_Bool)arg3;
- (void)effectsManagerDidAskToHideAllLensHints:(id)arg1;
- (void)effectsManager:(id)arg1 didAskToShowLensHintWithId:(id)arg2;
- (void)showLensesCollectionSubviews;
- (void)hideLensesCollectionSubviewsExceptCameraTimer;
- (void)scrollLensesCollectionToItem:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)adjustLensCellPositionAndScale:(id)arg1;
- (void)adjustLenseViewCollectionVisibleCellsScale;
- (void)downloadCurrentLens;
- (void)hideLensesUI:(_Bool)arg1;
- (void)showLensesUI:(_Bool)arg1;
- (void)downloadRegressorIfNecessary;
- (void)setLensesActive:(_Bool)arg1 animated:(_Bool)arg2;
- (void)lensesOpenCloseButtonPressed;
- (void)setLensesOpenCloseButtonVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (id)lensFromCurrentArrayByLensId:(id)arg1;
- (void)updateCurrentLensesSelection;
- (unsigned long long)currentSelectedLensIndex;
- (id)activeLensFaceId;
- (id)activeLensIdOrNilForOriginal;
- (id)activeLensIcon;
- (void)selectLensToTheLeft;
- (void)selectLensToTheRight;
- (void)setShowBirthdayReplyLens:(_Bool)arg1;
- (_Bool)isActiveSponsoredLens;
- (_Bool)isActiveGeoLens;
- (_Bool)isPointInsideLensesPhotoPickerUI:(struct CGPoint)arg1;
- (_Bool)isPointInsideLensesUI:(struct CGPoint)arg1;
- (unsigned long long)indexOfItemToSnapForPoint:(struct CGPoint)arg1 layout:(id)arg2;
- (void)selectLensAccordingScrollViewContentOffset:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (struct CGPoint)collectionView:(id)arg1 pointForTargetContentOffset:(struct CGPoint)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidScroll:(id)arg1;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (void)lensDataProvider:(id)arg1 didUpdateAllLenses:(id)arg2;
- (void)lensDataProvider:(id)arg1 didUpdateLens:(id)arg2;
- (void)reloadCellWithLens:(id)arg1;
- (void)updateSlugViewWithDefaultMargins:(id)arg1 forPosition:(long long)arg2;
- (struct CGRect)hintLabelRect;
- (void)initLensesCollectionViewProperties:(id)arg1;
- (id)initWithCameraOverlay:(id)arg1 cameraTimer:(id)arg2 hidableViewContainer:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

